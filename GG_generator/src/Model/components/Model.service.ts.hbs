import { prismaContext } from '@config/prismaConfig';
import { {{capital ModelName}} } from '@prisma/client';

{{#if wantQuery}}
/**
 * Function that returns all of the {{capitalPlural ModelName}} present in the database.
 *
 * @async
 * @function getAll{{ capitalPlural ModelName }}.
 * @returns {Promise<{{capital ModelName}}[]>} The {{capital ModelName}} List.
 */
export const getAll{{capitalPlural ModelName}} = async (): Promise<{{capital ModelName}}[]> => {
  return prismaContext.prisma.{{firstLower ModelName}}.findMany();
};

{{/if}}
/**
 * Function that returns a {{capital ModelName}} by its ID.
 *
 * @param {number} {{firstLower ModelName}}Id The {{firstLower ModelName}} ID.
 *
 * @async
 * @function get{{capital ModelName}}ById.
 * @returns {Promise<{{capital ModelName}} | null>} The found {{capital ModelName}}.
 */
export const get{{capital ModelName}}ById = async ({{firstLower ModelName}}Id: number): Promise<{{capital ModelName}} | null> => {
  return prismaContext.prisma.{{firstLower ModelName}}.findUnique({ where: { {{firstLower ModelName}}Id } });
};

{{#if wantMutation}}
/**
 * Function that creates a {{capital ModelName}} with some input data and returns it.
 *
 * @param input The {{capital ModelName}} input data.
 *
 * @async
 * @function create{{capital ModelName}}.
 * @returns {Promise<{{capital ModelName}}>} The {{capital ModelName}}.
 */
export const create{{capital ModelName}} = async (input): Promise<{{capital ModelName}}> => {
  return prismaContext.prisma.{{firstLower ModelName}}.create({ data: input });
};
{{/if}}